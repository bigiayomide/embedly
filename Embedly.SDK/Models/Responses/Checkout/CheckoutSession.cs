using System;
using System.Text.Json.Serialization;

namespace Embedly.SDK.Models.Responses.Checkout;

/// <summary>
///     Represents checkout wallet details based on WalletDetails schema.
/// </summary>
public sealed class CheckoutWallet
{
    /// <summary>
    ///     Gets or sets the wallet ID.
    /// </summary>
    [JsonPropertyName("id")]
    public Guid Id { get; set; }

    /// <summary>
    ///     Gets or sets the organization ID.
    /// </summary>
    [JsonPropertyName("organizationId")]
    public Guid OrganizationId { get; set; }

    /// <summary>
    ///     Gets or sets the organization prefix mapping ID.
    /// </summary>
    [JsonPropertyName("organizationPrefixMappingId")]
    public Guid OrganizationPrefixMappingId { get; set; }

    /// <summary>
    ///     Gets or sets the wallet name.
    /// </summary>
    [JsonPropertyName("walletName")]
    public string? WalletName { get; set; }

    /// <summary>
    ///     Gets or sets the wallet number.
    /// </summary>
    [JsonPropertyName("walletNumber")]
    public string? WalletNumber { get; set; }

    /// <summary>
    ///     Gets or sets the primary prefix.
    /// </summary>
    [JsonPropertyName("primaryPrefix")]
    public string? PrimaryPrefix { get; set; }

    /// <summary>
    ///     Gets or sets the secondary prefix.
    /// </summary>
    [JsonPropertyName("secondaryPrefix")]
    public string? SecondaryPrefix { get; set; }

    /// <summary>
    ///     Gets or sets the auto-generated suffix.
    /// </summary>
    [JsonPropertyName("autoGeneratedSuffix")]
    public string? AutoGeneratedSuffix { get; set; }

    /// <summary>
    ///     Gets or sets the expected amount.
    /// </summary>
    [JsonPropertyName("expectedAmount")]
    public double ExpectedAmount { get; set; }

    /// <summary>
    ///     Gets or sets the wallet status.
    /// </summary>
    [JsonPropertyName("status")]
    public string? Status { get; set; }

    /// <summary>
    ///     Gets or sets the date when the wallet was created.
    /// </summary>
    [JsonPropertyName("createdAt")]
    public DateTime CreatedAt { get; set; }

    /// <summary>
    ///     Gets or sets the date when the wallet expires.
    /// </summary>
    [JsonPropertyName("expiresAt")]
    public DateTime ExpiresAt { get; set; }

    /// <summary>
    ///     Gets or sets the date when the wallet was used.
    /// </summary>
    [JsonPropertyName("usedAt")]
    public DateTime? UsedAt { get; set; }

    /// <summary>
    ///     Gets or sets the date when the wallet expired.
    /// </summary>
    [JsonPropertyName("expiredAt")]
    public DateTime? ExpiredAt { get; set; }

    /// <summary>
    ///     Gets or sets the date when the wallet was reactivated.
    /// </summary>
    [JsonPropertyName("reactivatedAt")]
    public DateTime? ReactivatedAt { get; set; }

    /// <summary>
    ///     Checks if the checkout wallet has expired.
    /// </summary>
    public bool IsExpired()
    {
        return DateTime.UtcNow > ExpiresAt;
    }

    /// <summary>
    ///     Checks if the checkout wallet has been used.
    /// </summary>
    public bool IsUsed()
    {
        return UsedAt.HasValue;
    }
}